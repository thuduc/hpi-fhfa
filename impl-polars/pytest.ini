[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Coverage settings
addopts = 
    --cov=rsai
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --cov-branch
    --strict-markers
    -v
    --tb=short

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    regression: Regression tests
    smoke: Smoke tests for basic functionality
    performance: Performance benchmarking tests

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Test timeout
timeout = 300

# Minimum coverage percentage
[coverage:run]
branch = True
source = rsai
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov