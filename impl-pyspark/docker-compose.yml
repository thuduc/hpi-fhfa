version: '3.8'

services:
  spark-master:
    build: .
    container_name: hpi-spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - "8080:8080"  # Spark UI
      - "7077:7077"  # Spark Master
      - "4040:4040"  # Application UI
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
      - ./checkpoints:/app/checkpoints
    networks:
      - spark-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: >
      /bin/bash -c "
        /opt/spark/sbin/start-master.sh &&
        tail -f /opt/spark/logs/spark-*.out
      "

  spark-worker-1:
    build: .
    container_name: hpi-spark-worker-1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_WEBUI_PORT=8081
    ports:
      - "8081:8081"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    networks:
      - spark-network
    command: >
      /bin/bash -c "
        /opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
        tail -f /opt/spark/logs/spark-*.out
      "

  spark-worker-2:
    build: .
    container_name: hpi-spark-worker-2
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_WEBUI_PORT=8082
    ports:
      - "8082:8082"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    networks:
      - spark-network
    command: >
      /bin/bash -c "
        /opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
        tail -f /opt/spark/logs/spark-*.out
      "

  jupyter:
    build: .
    container_name: hpi-jupyter
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/app/notebooks
      - ./data:/app/data
      - ./output:/app/output
    networks:
      - spark-network
    command: >
      jupyter lab --ip=0.0.0.0 --port=8888 --no-browser 
      --allow-root --NotebookApp.token=''

  # Development database for testing
  postgres:
    image: postgres:15-alpine
    container_name: hpi-postgres
    environment:
      - POSTGRES_USER=hpi_user
      - POSTGRES_PASSWORD=hpi_password
      - POSTGRES_DB=hpi_metrics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hpi_user"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  spark-network:
    driver: bridge

volumes:
  postgres_data: